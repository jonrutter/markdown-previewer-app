{"version":3,"sources":["components/Preview/Preview.module.css","components/Header/index.js","components/Layout/index.js","components/Editor/index.js","components/Preview/index.js","App.js","index.js","components/Editor/Editor.module.css","components/Layout/Layout.module.css","components/Header/Header.module.css"],"names":["module","exports","Header","className","s","Layout","title","gridLeft","gridRight","Editor","input","handleChange","fullScreen","setFullScreen","onClick","id","onChange","e","target","value","marked","setOptions","gmf","breaks","Preview","content","clean","DOMPurify","sanitize","USE_PROFILES","html","parse","App","useState","setInput","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,wBAAwB,MAAQ,uBAAuB,KAAO,wB,6ICgBrLC,EAXA,WACb,OACE,qBAAKC,UAAWC,UAAhB,SACE,yBAAQD,UAAWC,UAAnB,UACE,cAAC,IAAD,IACA,oBAAID,UAAWC,QAAf,4CCSOC,EAdA,SAAC,GAAmC,EAAjCC,MAAkC,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACjC,OACE,qBAAKL,UAAWC,UAAhB,SACE,sBAAKD,UAAWC,UAAhB,UACE,cAAC,EAAD,IACA,uBAAMD,UAAWC,OAAjB,UACGG,EACAC,W,OC8BIC,EArCA,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAQjD,OAAKD,GAA6B,WAAfA,EAyBV,KAvBL,qBACET,UACiB,WAAfS,EAAA,UAA6BR,UAA7B,YAA0CA,YAAeA,UAF7D,SAKE,0BAASD,UAAWC,UAApB,UACE,yBAAQD,UAAWC,SAAnB,UACE,oBAAID,UAAWC,QAAf,oBACA,wBAAQU,QAjBO,WAErBD,EADED,EACY,GAEA,WAaR,SACkB,WAAfA,EAA0B,cAAC,IAAD,IAAoB,cAAC,IAAD,SAGnD,0BACET,UAAWC,SACXW,GAAG,SACHC,SAAU,SAACC,GAAD,OAAON,EAAaM,EAAEC,OAAOC,QAHzC,SAKGT,U,gDCtBbU,IAAOC,WAAW,CAChBC,KAAK,EACLC,QAAQ,IAGV,IAwCeC,EAxCC,SAAC,GAA0C,IAAxCd,EAAuC,EAAvCA,MAAOE,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAE9BY,EAAUL,IAAOV,GACjBgB,EAAQC,IAAUC,SAASH,EAAS,CAAEI,aAAc,CAAEC,MAAM,KAUlE,OAAKlB,GAA6B,YAAfA,EAuBV,KArBL,qBACET,UACiB,YAAfS,EAAA,UAA8BR,UAA9B,YAA2CA,YAAeA,UAF9D,SAKE,0BAASD,UAAWC,UAApB,UACE,yBAAQD,UAAWC,SAAnB,UACE,oBAAID,UAAWC,QAAf,uBACA,wBAAQU,QAlBO,WAErBD,EADED,EACY,GAEA,YAcR,SACkB,YAAfA,EAA2B,cAAC,IAAD,IAAoB,cAAC,IAAD,SAGpD,qBAAKT,UAAWC,OAAhB,SACE,qBAAKD,UAAWC,UAAWW,GAAG,UAA9B,SACGgB,YAAML,aCVNM,EAzBH,WACV,MAA0BC,mBAH1B,s5BAGA,mBAAOvB,EAAP,KAAcwB,EAAd,KACA,EAAoCD,mBAAS,IAA7C,mBAAOrB,EAAP,KAAmBC,EAAnB,KACA,OACE,cAAC,EAAD,CACEP,MAAM,qBACNC,SACE,cAAC,EAAD,CACEG,MAAOA,EACPC,aAAcuB,EACdtB,WAAYA,EACZC,cAAeA,IAGnBL,UACE,cAAC,EAAD,CACEE,MAAOA,EACPE,WAAYA,EACZC,cAAeA,O,MCtBzBsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BvC,EAAOC,QAAU,CAAC,QAAU,wBAAwB,SAAW,yBAAyB,QAAU,wBAAwB,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,qBAAqB,OAAS,yB,kBCA7ND,EAAOC,QAAU,CAAC,QAAU,wBAAwB,KAAO,uB,kBCA3DD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,QAAU,wBAAwB,MAAQ,yB","file":"static/js/main.b19596df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preview_wrapper__1Ox-s\",\"expanded\":\"Preview_expanded__uY1TR\",\"content\":\"Preview_content__KyiBL\",\"header\":\"Preview_header__2DAx_\",\"title\":\"Preview_title__3GYQJ\",\"body\":\"Preview_body__1odsA\"};","import React from 'react';\r\n\r\nimport * as s from './Header.module.css';\r\n\r\nimport { FaMarkdown } from 'react-icons/fa';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <header className={s.content}>\r\n        <FaMarkdown />\r\n        <h1 className={s.title}>React Markdown Previewer</h1>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport * as s from './Layout.module.css';\r\n\r\nimport Header from '../Header';\r\n\r\nconst Layout = ({ title, gridLeft, gridRight }) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.content}>\r\n        <Header />\r\n        <main className={s.grid}>\r\n          {gridLeft}\r\n          {gridRight}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\n\r\nimport * as s from './Editor.module.css';\r\n\r\nimport { FaExpandAlt, FaCompressAlt } from 'react-icons/fa';\r\n\r\nconst Editor = ({ input, handleChange, fullScreen, setFullScreen }) => {\r\n  const toggleFullScreen = () => {\r\n    if (fullScreen) {\r\n      setFullScreen('');\r\n    } else {\r\n      setFullScreen('editor');\r\n    }\r\n  };\r\n  if (!fullScreen || fullScreen === 'editor') {\r\n    return (\r\n      <div\r\n        className={\r\n          fullScreen === 'editor' ? `${s.wrapper} ${s.expanded}` : s.wrapper\r\n        }\r\n      >\r\n        <section className={s.content}>\r\n          <header className={s.header}>\r\n            <h2 className={s.title}>Editor</h2>\r\n            <button onClick={toggleFullScreen}>\r\n              {fullScreen === 'editor' ? <FaCompressAlt /> : <FaExpandAlt />}\r\n            </button>\r\n          </header>\r\n          <textarea\r\n            className={s.editor}\r\n            id=\"editor\"\r\n            onChange={(e) => handleChange(e.target.value)}\r\n          >\r\n            {input}\r\n          </textarea>\r\n        </section>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Editor;\r\n","import React from 'react';\r\n\r\n// input processing\r\nimport marked from 'marked';\r\nimport DOMPurify from 'dompurify';\r\nimport parse from 'html-react-parser';\r\n\r\nimport * as s from './Preview.module.css';\r\n\r\nimport { FaExpandAlt, FaCompressAlt } from 'react-icons/fa';\r\n\r\nmarked.setOptions({\r\n  gmf: true,\r\n  breaks: true,\r\n});\r\n\r\nconst Preview = ({ input, fullScreen, setFullScreen }) => {\r\n  // const processedContent = input.replace('\\n', '<br>');\r\n  const content = marked(input);\r\n  const clean = DOMPurify.sanitize(content, { USE_PROFILES: { html: true } });\r\n\r\n  const toggleFullScreen = () => {\r\n    if (fullScreen) {\r\n      setFullScreen('');\r\n    } else {\r\n      setFullScreen('preview');\r\n    }\r\n  };\r\n\r\n  if (!fullScreen || fullScreen === 'preview') {\r\n    return (\r\n      <div\r\n        className={\r\n          fullScreen === 'preview' ? `${s.wrapper} ${s.expanded}` : s.wrapper\r\n        }\r\n      >\r\n        <section className={s.content}>\r\n          <header className={s.header}>\r\n            <h2 className={s.title}>Previewer</h2>\r\n            <button onClick={toggleFullScreen}>\r\n              {fullScreen === 'preview' ? <FaCompressAlt /> : <FaExpandAlt />}\r\n            </button>\r\n          </header>\r\n          <div className={s.body}>\r\n            <div className={s.preview} id=\"preview\">\r\n              {parse(clean)}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Preview;\r\n","import React, { useState } from 'react';\n\n// components\nimport Layout from './components/Layout';\nimport Editor from './components/Editor';\nimport Preview from './components/Preview';\n\nconst defaultInput =\n  '# Hello! Welcome to my markdown previewer app!\\n\\nEnter text in markdown format in the Editor box, and watch the Previewer box render it in real time!\\n\\n## Markdown basics\\n\\n### Headers can be written by starting the line with number signs.\\n\\nAdd an empty space between lines to make a paragraph, and surround text with **double asterisks for bold text**, or *single asterisks for italic.*\\n\\n### As for lists: \\n\\n- You can write unordered lists\\n\\n- like this.\\n\\n1. And ordered lists\\n\\n2. Like this.\\n\\n### If you want to render code:\\n\\n`this-is-how-you-write: inline-code;`\\n\\n```\\n{\\n  \"and:\"a\",\\n  \"code\": \"block\",\\n}\\n```\\n\\n> Block quotes are easy, just start the line with >.\\n\\nFinally, to include images:\\n\\n![alternative text describing the image](https://picsum.photos/200)\\n\\nThose are the basics! Want to learn more? Check out this [this handy guide to markdown](https://www.markdownguide.org/)';\n\nconst App = () => {\n  const [input, setInput] = useState(defaultInput);\n  const [fullScreen, setFullScreen] = useState('');\n  return (\n    <Layout\n      title=\"Markdown Previewer\"\n      gridLeft={\n        <Editor\n          input={input}\n          handleChange={setInput}\n          fullScreen={fullScreen}\n          setFullScreen={setFullScreen}\n        />\n      }\n      gridRight={\n        <Preview\n          input={input}\n          fullScreen={fullScreen}\n          setFullScreen={setFullScreen}\n        />\n      }\n    />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '@fontsource/open-sans';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Editor_wrapper__1DJRq\",\"expanded\":\"Editor_expanded__11-nG\",\"content\":\"Editor_content__233_N\",\"header\":\"Editor_header__3AbZA\",\"title\":\"Editor_title__1wWXA\",\"body\":\"Editor_body__344do\",\"editor\":\"Editor_editor__2X6ES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__2zMY1\",\"grid\":\"Layout_grid__2fvkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__2n0Ou\",\"content\":\"Header_content__3YoTB\",\"title\":\"Header_title__2JT2p\"};"],"sourceRoot":""}