{"version":3,"sources":["components/Preview/Preview.module.css","components/Editor/Editor.module.css","components/Box/Box.module.css","images/icon.svg","components/Header/index.js","components/Layout/index.js","components/Box/index.js","components/Editor/index.js","components/Preview/index.js","App.js","index.js","components/Header/Header.module.css","components/Layout/Layout.module.css"],"names":["module","exports","Header","className","s","src","Icon","alt","Layout","gridLeft","gridRight","Box","title","fullScreen","setFullScreen","clear","children","useState","deletePrompt","setDeletePrompt","onClick","Editor","input","handleChange","htmlFor","id","onChange","e","target","value","marked","setOptions","gmf","breaks","Preview","content","clean","DOMPurify","sanitize","USE_PROFILES","html","parse","App","setInput","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87741585.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Preview_body__1odsA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"Editor_editor__2X6ES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Box_wrapper__3Z15M\",\"expanded\":\"Box_expanded__19AvG\",\"content\":\"Box_content__3PUK6\",\"header\":\"Box_header__1EQNJ\",\"title\":\"Box_title__rQpCJ\",\"deletePrompt\":\"Box_deletePrompt__37Zqq\",\"buttons\":\"Box_buttons__Zc63-\",\"body\":\"Box_body__28Yr-\",\"editorBody\":\"Box_editorBody__2tuMZ\",\"btn\":\"Box_btn__2bH8N\"};","export default __webpack_public_path__ + \"static/media/icon.d4ad6d8e.svg\";","import React from 'react';\r\n\r\nimport * as s from './Header.module.css';\r\n\r\nimport Icon from '../../images/icon.svg';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <header className={s.content}>\r\n        <img src={Icon} alt=\"\" className={s.icon} />\r\n        <h1 className={s.title}>Markdown Previewer</h1>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport * as s from './Layout.module.css';\r\n\r\nimport Header from '../Header';\r\n\r\nconst Layout = ({ gridLeft, gridRight }) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.content}>\r\n        <Header />\r\n        <main className={s.grid}>\r\n          {gridLeft}\r\n          {gridRight}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState } from 'react';\r\n\r\n// styles\r\nimport * as s from './Box.module.css';\r\n\r\n// icons\r\nimport { FaExpandAlt, FaCompressAlt, FaTrash } from 'react-icons/fa';\r\n\r\nconst Box = ({ title, fullScreen, setFullScreen, clear, children }) => {\r\n  const [deletePrompt, setDeletePrompt] = useState(false);\r\n\r\n  const clearInput = () => {\r\n    clear();\r\n    setDeletePrompt(false);\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    if (fullScreen) {\r\n      setFullScreen('');\r\n    } else {\r\n      setFullScreen(title);\r\n    }\r\n  };\r\n\r\n  if (!fullScreen || fullScreen === title) {\r\n    return (\r\n      <div\r\n        className={\r\n          fullScreen === title ? `${s.wrapper} ${s.expanded}` : s.wrapper\r\n        }\r\n      >\r\n        <section className={s.content}>\r\n          <header className={s.header}>\r\n            {deletePrompt && (\r\n              <div className={s.deletePrompt}>\r\n                <h2>Clear editor?</h2>\r\n                <div className={s.buttons}>\r\n                  <button className={s.btn} onClick={clearInput}>\r\n                    Yes\r\n                  </button>\r\n                  <button\r\n                    className={s.btn}\r\n                    onClick={() => setDeletePrompt(false)}\r\n                  >\r\n                    No\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <h2 className={s.title}>{title}</h2>\r\n            <div className={s.buttons}>\r\n              {title === 'Editor' && (\r\n                <button\r\n                  onClick={() => setDeletePrompt(true)}\r\n                  className={s.btn}\r\n                  aria-label=\"Clear editor contents\"\r\n                >\r\n                  <FaTrash />\r\n                </button>\r\n              )}\r\n              <button\r\n                onClick={toggleFullScreen}\r\n                className={s.btn}\r\n                aria-label={\r\n                  fullScreen ? `Minimize ${title}` : `Expand ${title}`\r\n                }\r\n              >\r\n                {fullScreen === title ? <FaCompressAlt /> : <FaExpandAlt />}\r\n              </button>\r\n            </div>\r\n          </header>\r\n          <div className={title === 'Editor' ? s.editorBody : s.body}>\r\n            {children}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Box;\r\n","import React from 'react';\r\n\r\n// styles\r\nimport * as s from './Editor.module.css';\r\n\r\n// components\r\nimport Box from '../Box';\r\n\r\nconst Editor = ({ input, handleChange, fullScreen, setFullScreen }) => {\r\n  return (\r\n    <Box\r\n      title=\"Editor\"\r\n      fullScreen={fullScreen}\r\n      setFullScreen={setFullScreen}\r\n      clear={() => handleChange('')}\r\n    >\r\n      <label htmlFor=\"editor\" className=\"sr-only\">\r\n        Enter markdown\r\n      </label>\r\n      <textarea\r\n        className={s.editor}\r\n        id=\"editor\"\r\n        onChange={(e) => handleChange(e.target.value)}\r\n        value={input}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React from 'react';\r\n\r\n// input processing\r\nimport marked from 'marked';\r\nimport DOMPurify from 'dompurify';\r\nimport parse from 'html-react-parser';\r\n\r\n// styles\r\nimport * as s from './Preview.module.css';\r\n\r\n// components\r\nimport Box from '../Box';\r\n\r\nmarked.setOptions({\r\n  gmf: true,\r\n  breaks: true,\r\n});\r\n\r\nconst Preview = ({ input, fullScreen, setFullScreen }) => {\r\n  const content = marked(input);\r\n  const clean = DOMPurify.sanitize(content, { USE_PROFILES: { html: true } });\r\n\r\n  return (\r\n    <Box title=\"Preview\" fullScreen={fullScreen} setFullScreen={setFullScreen}>\r\n      <div className={s.body}>\r\n        <div className={s.preview} id=\"preview\">\r\n          {parse(clean)}\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import React, { useState } from 'react';\r\n\r\n// components\r\nimport Layout from './components/Layout';\r\nimport Editor from './components/Editor';\r\nimport Preview from './components/Preview';\r\n\r\nconst defaultInput =\r\n  '# Hello! Welcome to my markdown previewer app!\\n\\nEnter text in markdown format in the Editor box, and watch the Previewer box render it in real time!\\n\\n## Markdown basics\\n\\n### Headers can be written by starting the line with number signs.\\n\\nAdd an empty space between lines to make a paragraph, and surround text with **double asterisks for bold text**, or *single asterisks for italic.*\\n\\n### As for lists: \\n\\n- You can write unordered lists\\n\\n- like this.\\n\\n1. And ordered lists\\n\\n2. Like this.\\n\\n### If you want to render code:\\n\\n`this-is-how-you-write: inline-code;`\\n\\n```\\n{\\n  \"and:\"a\",\\n  \"code\": \"block\",\\n}\\n```\\n\\n> Block quotes are easy, just start the line with >.\\n\\nFinally, to include images:\\n\\n![alternative text describing the image](https://picsum.photos/200)\\n\\nThose are the basics! Want to learn more? Check out this [this handy guide to markdown](https://www.markdownguide.org/)';\r\n\r\nconst App = () => {\r\n  const [input, setInput] = useState(defaultInput);\r\n  const [fullScreen, setFullScreen] = useState('');\r\n  return (\r\n    <Layout\r\n      title=\"Markdown Previewer\"\r\n      gridLeft={\r\n        <Editor\r\n          input={input}\r\n          handleChange={setInput}\r\n          fullScreen={fullScreen}\r\n          setFullScreen={setFullScreen}\r\n        />\r\n      }\r\n      gridRight={\r\n        <Preview\r\n          input={input}\r\n          fullScreen={fullScreen}\r\n          setFullScreen={setFullScreen}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport '@fontsource/open-sans';\r\nimport '@fontsource/montserrat';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__2n0Ou\",\"content\":\"Header_content__3YoTB\",\"title\":\"Header_title__2JT2p\",\"icon\":\"Header_icon__puMWF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__2zMY1\",\"grid\":\"Layout_grid__2fvkU\"};"],"sourceRoot":""}